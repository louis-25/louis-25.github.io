{"version":3,"file":"component---src-pages-blog-tsx-59f0ddcb024c41683a3a.js","mappings":"8MA4FA,UA/D+C,SAAC,GAQzC,IAPOA,EAOR,EAPJC,SAAYD,OAOR,IANJE,KACuBC,EAKnB,EALFC,kBAAqBD,MAEAE,EAGnB,EAJFC,KACEC,gBAAmBF,gBAKjBG,EAA8BC,EAAAA,MAAkBT,GAChDU,EACuB,iBAApBF,EAAOG,UAA0BH,EAAOG,SAE3CH,EAAOG,SADP,MAGAC,GAAeC,EAAAA,EAAAA,UACnB,kBACEV,EAAMW,QAEJ,SACEC,EADF,GAeE,OARG,EAJDC,KACEC,YAAeC,WAIRC,SAAQ,SAAAR,QACMS,IAAnBL,EAAKJ,GAAyBI,EAAKJ,GAAY,EAC9CI,EAAKJ,QAGZI,EAAI,MAEGA,IAET,CAAEM,IAAK,MAEX,IAEIC,GAAQ,qFAKd,OACEC,EAAAA,cAACC,EAAAA,EAAD,CAAUC,MAAM,eAAeC,YAAY,cACzCH,EAAAA,cAACD,EAAD,KACEC,EAAAA,cAACI,EAAAA,EAAD,MACAJ,EAAAA,cAACK,EAAAA,EAAD,CAAOH,MAAK,QAAWI,SAAS,wBAChCN,EAAAA,cAACO,EAAAA,EAAD,CAAgBzB,gBAAiBA,GAC/BkB,EAAAA,cAACQ,EAAAA,EAAD,CACErB,iBAAkBA,EAClBE,aAAcA,KAGlBW,EAAAA,cAACS,EAAAA,EAAD,CAAUtB,iBAAkBA,EAAkBuB,MAAO9B","sources":["webpack://louis-25/./src/pages/blog.tsx"],"sourcesContent":["import Template from 'components/Common/Template'\r\nimport CategoryList, { CategoryListProps } from 'components/Blog/CategoryList'\r\nimport PostList from 'components/Blog/PostList'\r\nimport { IGatsbyImageData } from 'gatsby-plugin-image'\r\nimport React, { FunctionComponent, useMemo } from 'react'\r\nimport queryString, { ParsedQuery } from 'query-string'\r\nimport { PostListItemType } from 'types/PostItem.types'\r\nimport { graphql } from 'gatsby'\r\nimport Header from 'components/Common/Header'\r\nimport Title from 'components/Common/Title'\r\nimport styled from '@emotion/styled'\r\nimport ProfileSection from 'components/Common/ProfileSection'\r\n\r\ntype BlogPageProps = {\r\n  location: {\r\n    search: string\r\n  }\r\n  data: {\r\n    allMarkdownRemark: {\r\n      edges: PostListItemType[]\r\n    }\r\n    file: {\r\n      childImageSharp: {\r\n        gatsbyImageData: IGatsbyImageData\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst blog: FunctionComponent<BlogPageProps> = ({\r\n  location: { search },\r\n  data: {\r\n    allMarkdownRemark: { edges },\r\n    file: {\r\n      childImageSharp: { gatsbyImageData },\r\n    },\r\n  },\r\n}) => {\r\n  // URL쿼리 파싱\r\n  const parsed: ParsedQuery<string> = queryString.parse(search)\r\n  const selectedCategory: string =\r\n    typeof parsed.category !== 'string' || !parsed.category //category값 가져오기\r\n      ? 'All'\r\n      : parsed.category\r\n\r\n  const categoryList = useMemo(\r\n    () =>\r\n      edges.reduce(\r\n        //GraphQL의 edges배열\r\n        (\r\n          list: CategoryListProps['categoryList'],\r\n          {\r\n            node: {\r\n              frontmatter: { categories },\r\n            },\r\n          }: PostListItemType,\r\n        ) => {\r\n          categories.forEach(category => {\r\n            if (list[category] === undefined) list[category] = 1\r\n            else list[category]++\r\n          })\r\n\r\n          list['All']++\r\n\r\n          return list\r\n        },\r\n        { All: 0 },\r\n      ),\r\n    [],\r\n  )\r\n  const InnerBox = styled.div`\r\n    width: 768px;\r\n    margin: auto;\r\n  `\r\n\r\n  return (\r\n    <Template title=\"Louis's Blog\" description=\"개발용 블로그입니다\">\r\n      <InnerBox>\r\n        <Header></Header>\r\n        <Title title={`Blog.`} subTitle=\"Development, Record\" />\r\n        <ProfileSection gatsbyImageData={gatsbyImageData}>\r\n          <CategoryList\r\n            selectedCategory={selectedCategory}\r\n            categoryList={categoryList}\r\n          />\r\n        </ProfileSection>\r\n        <PostList selectedCategory={selectedCategory} posts={edges} />\r\n      </InnerBox>\r\n    </Template>\r\n  )\r\n}\r\n\r\nexport default blog\r\n\r\nexport const getPostList = graphql`\r\n  query getPostList {\r\n    allMarkdownRemark(\r\n      sort: { order: DESC, fields: [frontmatter___date, frontmatter___title] }\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n            summary\r\n            date(formatString: \"YYYY.MM.DD.\")\r\n            categories\r\n            thumbnail {\r\n              childImageSharp {\r\n                gatsbyImageData(width: 768, height: 400)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    file(name: { eq: \"profile-image\" }) {\r\n      childImageSharp {\r\n        gatsbyImageData(width: 120, height: 120)\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["search","location","data","edges","allMarkdownRemark","gatsbyImageData","file","childImageSharp","parsed","queryString","selectedCategory","category","categoryList","useMemo","reduce","list","node","frontmatter","categories","forEach","undefined","All","InnerBox","React","Template","title","description","Header","Title","subTitle","ProfileSection","CategoryList","PostList","posts"],"sourceRoot":""}