{"version":3,"file":"component---src-pages-blog-tsx-804d5b37e6feebeeaadb.js","mappings":"0OAaA,IAAMA,GAAc,sMAYdC,GAAU,gJAUVC,GAAO,kDACG,qBAAGC,QADN,KAIPC,GAAY,OAAOC,EAAAA,EAAP,sBAAHC,CAAAA,KAAAA,QAAAA,OAAAA,8EASTC,GAAW,OAAOF,EAAAA,EAAP,sBAAHC,CAAAA,KAAAA,SAAAA,OAAAA,8EASRE,EAAuC,YAIzC,IAHFC,EAGC,EAHDA,MACAC,EAEC,EAFDA,SACAP,EACC,EADDA,MAEA,OACEQ,EAAAA,cAACX,EAAD,KACa,UAAVG,GAAqBQ,EAAAA,cAACV,EAAD,MAEtBU,EAAAA,cAACT,EAAD,CAASC,MAAOA,GACdQ,EAAAA,cAACP,EAAD,KAAYK,GACZE,EAAAA,cAACJ,EAAD,KAAWG,MAMnBF,EAAMI,aAAe,CACnBT,MAAO,QAGT,QClDA,IA0DA,EA1D+C,SAAC,GAKzC,IAJOU,EAIR,EAJJC,SAAYD,OAEWE,EAEnB,EAHJC,KACEC,kBAAqBF,MAIjBG,EAA8BC,EAAAA,MAAkBN,GAChDO,EACuB,iBAApBF,EAAOG,UAA0BH,EAAOG,SAE3CH,EAAOG,SADP,MAGAC,GAAeC,EAAAA,EAAAA,UACnB,kBACER,EAAMS,QAEJ,SACEC,EADF,GAeE,OARG,EAJDC,KACEC,YAAeC,WAIRC,SAAQ,SAAAR,QACMS,IAAnBL,EAAKJ,GAAyBI,EAAKJ,GAAY,EAC9CI,EAAKJ,QAGZI,EAAI,MAEGA,IAET,CAAEM,IAAK,MAEX,IAEIC,GAAQ,qFAKd,OACErB,EAAAA,cAACsB,EAAAA,EAAD,CAAUxB,MAAM,eAAeyB,YAAY,cACzCvB,EAAAA,cAACwB,EAAAA,EAAD,MACAxB,EAAAA,cAACqB,EAAD,KACErB,EAAAA,cAACH,EAAD,CAAOC,MAAK,QAAWC,SAAS,yBAElCC,EAAAA,cAACyB,EAAAA,EAAD,CACEhB,iBAAkBA,EAClBE,aAAcA,IAEhBX,EAAAA,cAAC0B,EAAAA,EAAD,CAAUjB,iBAAkBA,EAAkBkB,MAAOvB","sources":["webpack://louis-25/./src/components/Common/Title.tsx","webpack://louis-25/./src/pages/blog.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react'\nimport Text from '/src/components/atom/Text'\nimport styled from '@emotion/styled'\n\ntype TitleStyleProps = {\n  align?: 'right' | 'left'\n}\n\ntype TitleProps = {\n  title: string\n  subTitle: string\n} & TitleStyleProps\n\nconst TitleComponent = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 50px;\n\n  @media (max-width: 768px) {\n    margin-bottom: 60px;\n  }\n`\n\nconst StyledLine = styled.div`\n  width: 50%;\n  height: 1px;\n  background: var(--color);\n\n  @media (max-width: 768px) {\n    width: 30%;\n  }\n`\n\nconst TextBox = styled.div<TitleStyleProps>`\n  text-align: ${({ align }) => align};\n`\n\nconst MainTitle = styled(Text)`\n  font-size: 60px;\n  font-weight: 700;\n\n  @media (max-width: 768px) {\n    font-size: 30px;\n  }\n`\n\nconst SubTitle = styled(Text)`\n  font-size: 25px;\n  font-weight: 300;\n\n  @media (max-width: 768px) {\n    font-size: 15px;\n  }\n`\n\nconst Title: FunctionComponent<TitleProps> = function ({\n  title,\n  subTitle,\n  align,\n}) {\n  return (\n    <TitleComponent>\n      {align === 'right' && <StyledLine />}\n\n      <TextBox align={align}>\n        <MainTitle>{title}</MainTitle>\n        <SubTitle>{subTitle}</SubTitle>\n      </TextBox>\n    </TitleComponent>\n  )\n}\n\nTitle.defaultProps = {\n  align: 'left',\n}\n\nexport default Title\n","import Template from 'components/Common/Template'\r\nimport CategoryList, { CategoryListProps } from 'components/Blog/CategoryList'\r\nimport PostList from 'components/Blog/PostList'\r\nimport { IGatsbyImageData } from 'gatsby-plugin-image'\r\nimport React, { FunctionComponent, useMemo } from 'react'\r\nimport queryString, { ParsedQuery } from 'query-string'\r\nimport { PostListItemType } from 'types/PostItem.types'\r\nimport { graphql } from 'gatsby'\r\nimport Header from 'components/Common/Header'\r\nimport Title from 'components/Common/Title'\r\nimport styled from '@emotion/styled'\r\n\r\ntype BlogPageProps = {\r\n  location: {\r\n    search: string\r\n  }\r\n  data: {\r\n    allMarkdownRemark: {\r\n      edges: PostListItemType[]\r\n    }\r\n    file: {\r\n      childImageSharp: {\r\n        gatsbyImageData: IGatsbyImageData\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst blog: FunctionComponent<BlogPageProps> = ({\r\n  location: { search },\r\n  data: {\r\n    allMarkdownRemark: { edges },\r\n  },\r\n}) => {\r\n  // URL쿼리 파싱\r\n  const parsed: ParsedQuery<string> = queryString.parse(search)\r\n  const selectedCategory: string =\r\n    typeof parsed.category !== 'string' || !parsed.category //category값 가져오기\r\n      ? 'All'\r\n      : parsed.category\r\n\r\n  const categoryList = useMemo(\r\n    () =>\r\n      edges.reduce(\r\n        //GraphQL의 edges배열\r\n        (\r\n          list: CategoryListProps['categoryList'],\r\n          {\r\n            node: {\r\n              frontmatter: { categories },\r\n            },\r\n          }: PostListItemType,\r\n        ) => {\r\n          categories.forEach(category => {\r\n            if (list[category] === undefined) list[category] = 1\r\n            else list[category]++\r\n          })\r\n\r\n          list['All']++\r\n\r\n          return list\r\n        },\r\n        { All: 0 },\r\n      ),\r\n    [],\r\n  )\r\n  const TitleBox = styled.div`\r\n    width: 768px;\r\n    margin: auto;\r\n  `\r\n\r\n  return (\r\n    <Template title=\"Louis's Blog\" description=\"개발용 블로그입니다\">\r\n      <Header></Header>\r\n      <TitleBox>\r\n        <Title title={`Blog.`} subTitle=\"Development, Record\" />\r\n      </TitleBox>\r\n      <CategoryList\r\n        selectedCategory={selectedCategory}\r\n        categoryList={categoryList}\r\n      />\r\n      <PostList selectedCategory={selectedCategory} posts={edges} />\r\n    </Template>\r\n  )\r\n}\r\n\r\nexport default blog\r\n\r\nexport const getPostList = graphql`\r\n  query getPostList {\r\n    allMarkdownRemark(\r\n      sort: { order: DESC, fields: [frontmatter___date, frontmatter___title] }\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n            summary\r\n            date(formatString: \"YYYY.MM.DD.\")\r\n            categories\r\n            thumbnail {\r\n              childImageSharp {\r\n                gatsbyImageData(width: 768, height: 400)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    file(name: { eq: \"profile-image\" }) {\r\n      childImageSharp {\r\n        gatsbyImageData(width: 120, height: 120)\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["TitleComponent","StyledLine","TextBox","align","MainTitle","Text","process","SubTitle","Title","title","subTitle","React","defaultProps","search","location","edges","data","allMarkdownRemark","parsed","queryString","selectedCategory","category","categoryList","useMemo","reduce","list","node","frontmatter","categories","forEach","undefined","All","TitleBox","Template","description","Header","CategoryList","PostList","posts"],"sourceRoot":""}